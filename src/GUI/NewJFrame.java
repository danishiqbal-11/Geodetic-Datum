/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static GUI.Transformation4.calledFromGUI;
import static GUI.Transformation4.toDecimal;
import static GUI.Transformation4.toDecimalS;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.io.File;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.KeyCode.Z;
import javax.swing.JOptionPane;
import java.awt.Desktop;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URI;
import javax.swing.JButton;
import javax.swing.SwingUtilities;
import java.io.*;

/**
 *
 * @author Zeeshan Khan
 */

public class NewJFrame extends javax.swing.JFrame  {
     double datumOut[]=new double[3];
    double lat_input=5,long_input=5,height_input=5;
    Transformation4 tf=new Transformation4();
    public static double a1,a2;
    int Toggle=0;
    JButton setMarkerButton;
    //map ma=new map();
    public static boolean error=false;
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }
    
    public void setPanes()
            {
                map ma1=new map();
                LongitudeInput.setText(Double.toString(ma1.l1));
                LatitudeInput.setText(Double.toString(ma1.l2));
                //System.out.println("Hello"+ma1.l1);
                //SwingUtilities.updateComponentTreeUI(this);
                //LongitudeInput.repaint();
                //LongitudeInput.revalidate();
            }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    String value;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormatSelector = new javax.swing.ButtonGroup();
        Input_Datum = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        LatitudeInput = new javax.swing.JTextField();
        LongitudeInput = new javax.swing.JTextField();
        HeightInput = new javax.swing.JTextField();
        Output_Datum = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LatitudeOutput = new javax.swing.JTextField();
        LongitudeOutput = new javax.swing.JTextField();
        HeightOutput = new javax.swing.JTextField();
        ConvertButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        fromMap = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        DD = new javax.swing.JRadioButton();
        DMM = new javax.swing.JRadioButton();
        DMSS = new javax.swing.JRadioButton();
        HeightOption = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Geodetic Transformation");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(102, 255, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Input_Datum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Input_Datum.setMaximumRowCount(15);
        Input_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WGS84", "Everest_1956 IND-I -  Indian  Everest (India 1956) : India And Nepal", "Everest_1830 IND-B - Indian  Everest (India 1830) : Bangladesh", "Everest_Pakistan IND-P  Everest(Pakistan) :Pakistan", "Everest_1948  TIL   Everest(Timbalai1948) :Brunei and East Malaysia", "Everest_1830  INF-A  Everest(India1954) :Thailand", "Everest_1830  INH-A  Everest(India1975) :Thailand", "Everest_1830  ING-B  Everest(India1960) :ConSon Island", "Everest_1830  ING-A   Everest(India1960) :Vietnam", "Everest_1830  KAN  Everest(Kandawala1830) :Sri Lanka", "NAD27  NAS-A - North American 1927 (Clarke 1866) : Eastern United States", "NAD27 NAS-B  - North American 1927 (Clarke 1866) : Western United States", "NAD27 NAS-C  - North American 1927 (Clarke 1866) :Mean Value(Conus)", "NAD27 NAS-D - North American 1927  (Clarke 1866) :Alaska", "NAD27 NAS-E - North American 1927  (Clarke 1866) :Canada", "NAD27 NAS-F - North American 1927  (Clarke 1866) :Alberta and British Columbia", "NAD27 NAS-G - North American 1927  (Clarke 1866) :East Canada", "NAD27 NAS-N - North American 1927  (Clarke 1866) :Central America", "NAD27 NAS-P - North American 1927  (Clarke 1866) :Caribbean", "NAD27 NAS-T - North American 1927  (Clarke 1866) :Cuba", "NAD27 NAS-L - North American 1927  (Clarke 1866) :Mexico", "NAD83 NAR-A -North American 1983 (GRS 80) :Alaska", "NAD83 NAR-B -North American 1983 (GRS 80) :Canada", "NAD83 NAR-C -North American 1983 (GRS 80) :Conus", "NAD83 NAR-D -North American 1983 (GRS 80) :Mexico And Central America", "NAD83 NAR-E -North American 1983 (GRS 80) :Aleutian Island", "NAD83 NAR-H -North American 1983 (GRS 80) :Hawaii", "AGD66 ZEE-K - Australian Geodetic Datum 1966 :Australia" }));
        Input_Datum.setBorder(null);
        Input_Datum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Input_DatumActionPerformed(evt);
                        value = Input_Datum.getSelectedItem().toString();
        //System.out.println("value : "+value);
        if(value.contains("WGS84"))
        {
                    Output_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  "Everest_1956 IND-I -  Indian  Everest (India 1956) : India And Nepal", "Everest_1830 IND-B - Indian  Everest (India 1830) : Bangladesh", "Everest_Pakistan IND-P  Everest(Pakistan) :Pakistan", "Everest_1948  TIL   Everest(Timbalai1948),Brunei and East Malaysia", "Everest_1830  INF-A  Everest(India1954),Thailand", "Everest_1830  INH-A  Everest(India1975),Thailand", "Everest_1830  ING-B  Everest(India1960),ConSon Island", "Everest_1830  ING-A   Everest(India1960),Vietnam", "Everest_1830  KAN  Everest(Kandawala1830),Sri Lanka", "NAD27  NAS-A - North American 1927 (Clarke 1866) : Eastern United States", "NAD27 NAS-B  - North American 1927 (Clarke 1866) : Western United States", "NAD27 NAS-C  - North American 1927 (Clarke 1866) :Mean Value(Conus)", "NAD27 NAS-D - North American 1927  (Clarke 1866) :Alaska", "NAD27 NAS-E - North American 1927  (Clarke 1866) :Canada", "NAD27 NAS-F - North American 1927  (Clarke 1866) :Alberta and British Columbia", "NAD27 NAS-G - North American 1927  (Clarke 1866) :East Canada", "NAD27 NAS-N - North American 1927  (Clarke 1866) :Central America", "NAD27 NAS-P - North American 1927  (Clarke 1866) :Caribbean", "NAD27 NAS-T - North American 1927  (Clarke 1866) :Cuba", "NAD27 NAS-L - North American 1927  (Clarke 1866) :Mexico", "NAD83 NAR-A -North American 1983 (GRS 80) :Alaska", "NAD83 NAR-B -North American 1983 (GRS 80) :Canada", "NAD83 NAR-C -North American 1983 (GRS 80) :Conus", "NAD83 NAR-D -North American 1983 (GRS 80) :Mexico And Central America", "NAD83 NAR-E -North American 1983 (GRS 80) :Aleutian Island", "NAD83 NAR-H -North American 1983 (GRS 80) :Hawaii" }));
        }
        else if(value.contains("NAR"))
        {
                    Output_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WGS84", "NAD27  NAS-A - North American 1927 (Clarke 1866) : Eastern United States", "NAD27 NAS-B  - North American 1927 (Clarke 1866) : Western United States", "NAD27 NAS-C  - North American 1927 (Clarke 1866) :Mean Value(Conus)", "NAD27 NAS-D - North American 1927  (Clarke 1866) :Alaska", "NAD27 NAS-E - North American 1927  (Clarke 1866) :Canada", "NAD27 NAS-F - North American 1927  (Clarke 1866) :Alberta and British Columbia", "NAD27 NAS-G - North American 1927  (Clarke 1866) :East Canada", "NAD27 NAS-N - North American 1927  (Clarke 1866) :Central America", "NAD27 NAS-P - North American 1927  (Clarke 1866) :Caribbean", "NAD27 NAS-T - North American 1927  (Clarke 1866) :Cuba", "NAD27 NAS-L - North American 1927  (Clarke 1866) :Mexico" }));
        }
        else if(value.contains("NAS"))
        {
                    Output_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WGS84", "NAD83 NAR-A -North American 1983 (GRS 80) :Alaska", "NAD83 NAR-B -North American 1983 (GRS 80) :Canada", "NAD83 NAR-C -North American 1983 (GRS 80) :Conus", "NAD83 NAR-D -North American 1983 (GRS 80) :Mexico And Central America", "NAD83 NAR-E -North American 1983 (GRS 80) :Aleutian Island", "NAD83 NAR-H -North American 1983 (GRS 80) :Hawaii"}));
        }
        else
        {
                Output_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WGS84"}));
        
        }
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Input Datum");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Latitude");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Longitude");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Height");

        LatitudeInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LatitudeInputMouseExited(evt);
            }
        });
        LatitudeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LatitudeInputActionPerformed(evt);
            }
        });

        LongitudeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LongitudeInputActionPerformed(evt);
            }
        });

        HeightInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightInputActionPerformed(evt);
            }
        });

        Output_Datum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        //Output_Datum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WGS84", "Everest_1956 IND-I -  Indian  Everest (India 1956) : India And Nepal", "Everest_1830 IND-B - Indian  Everest (India 1830) : Bangladesh", "Everest_Pakistan IND-P  Everest(Pakistan) :Pakistan", "Everest_1948  TIL   Everest(Timbalai1948) :Brunei and East Malaysia", "Everest_1830  INF-A  Everest(India1954) :Thailand", "Everest_1830  INH-A  Everest(India1975) :Thailand", "Everest_1830  ING-B  Everest(India1960) :ConSon Island", "Everest_1830  ING-A   Everest(India1960) :Vietnam", "Everest_1830  KAN  Everest(Kandawala1830) :Sri Lanka", "NAD27  NAS-A - North American 1927 (Clarke 1866) : Eastern United States", "NAD27 NAS-B  - North American 1927 (Clarke 1866) : Western United States", "NAD27 NAS-C  - North American 1927 (Clarke 1866) :Mean Value(Conus)", "NAD27 NAS-D - North American 1927  (Clarke 1866) :Alaska", "NAD27 NAS-E - North American 1927  (Clarke 1866) :Canada", "NAD27 NAS-F - North American 1927  (Clarke 1866) :Alberta and British Columbia", "NAD27 NAS-G - North American 1927  (Clarke 1866) :East Canada", "NAD27 NAS-N - North American 1927  (Clarke 1866) :Central America", "NAD27 NAS-P - North American 1927  (Clarke 1866) :Caribbean", "NAD27 NAS-T - North American 1927  (Clarke 1866) :Cuba", "NAD27 NAS-L - North American 1927  (Clarke 1866) :Mexico", "NAD83 NAR-A -North American 1983 (GRS 80) :Alaska", "NAD83 NAR-B -North American 1983 (GRS 80) :Canada", "NAD83 NAR-C -North American 1983 (GRS 80) :Conus", "NAD83 NAR-D -North American 1983 (GRS 80) :Mexico And Central America", "NAD83 NAR-E -North American 1983 (GRS 80) :Aleutian Island", "NAD83 NAR-H -North American 1983 (GRS 80) :Hawaii", "AGD66 ZEE-K - Australian Geodetic Datum 1966 :Australia" }));
        Output_Datum.setPreferredSize(new java.awt.Dimension(384, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Output Datum");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Latitude");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Longitude");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Height");

        LatitudeOutput.setEditable(false);
        LatitudeOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LatitudeOutputActionPerformed(evt);
            }
        });

        LongitudeOutput.setEditable(false);

        HeightOutput.setEditable(false);
        HeightOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightOutputActionPerformed(evt);
            }
        });

        ConvertButton.setText("Convert");
        ConvertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        fromMap.setText("Input From Map");
        fromMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromMapActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Input Datum Format");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        FormatSelector.add(DD);
        DD.setSelected(true);
        DD.setText("  DD.DDDD");
        DD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DDActionPerformed(evt);
            }
        });

        FormatSelector.add(DMM);
        DMM.setText("  DD MM.MMMM");
        DMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DMMActionPerformed(evt);
            }
        });

        FormatSelector.add(DMSS);
        DMSS.setText("  DD MM SS.SSSS");
        DMSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DMSSActionPerformed(evt);
            }
        });

        HeightOption.setText("Height");
        HeightOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightOptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DD)
                            .addComponent(DMM)
                            .addComponent(DMSS)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(HeightOption)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DD)
                .addGap(18, 18, 18)
                .addComponent(DMM)
                .addGap(18, 18, 18)
                .addComponent(DMSS)
                .addGap(18, 18, 18)
                .addComponent(HeightOption)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LatitudeInput, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(LongitudeInput)
                            .addComponent(HeightInput)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ConvertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(67, 67, 67)
                            .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LongitudeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LatitudeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(HeightOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(Output_Datum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Input_Datum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Input_Datum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LatitudeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LongitudeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HeightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Output_Datum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LatitudeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LongitudeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromMap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HeightOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConvertButton)
                    .addComponent(ResetButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Input_DatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Input_DatumActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Input_DatumActionPerformed

    private void LatitudeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LatitudeInputActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_LatitudeInputActionPerformed

    private void LatitudeOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LatitudeOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LatitudeOutputActionPerformed

    private void ConvertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertButtonActionPerformed
        // TODO add your handling code here:
        //VERY IMPORTANT CODE
        int flag=0;  //For input validation
        int check=0; //for history 
        
        if("".equals(LatitudeInput.getText()) || "".equals(LongitudeInput.getText()) || "".equals(HeightInput.getText()))
        {
            JOptionPane.showMessageDialog(null,"Enter All Details","Error",JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            if (LatitudeInput.getText().matches(".*[a-z].*") || LongitudeInput.getText().matches(".*[a-z].*"))
            {
                JOptionPane.showMessageDialog(null,"only digit is allow","Error",JOptionPane.INFORMATION_MESSAGE);
                    flag=1;
            }
            else{
              
                
                InputStream f1 = NewJFrame.class.getResourceAsStream("recent.csv");
                BufferedReader br1 = new BufferedReader(new InputStreamReader(f1));
                String strLine;
           
                try {
                    //To Read Basic Parameters from recent
                    while ((strLine = br1.readLine()) != null)
                    {
                        String[] tokens = strLine.split(",");
                        if(tokens[0].equals((String)(Input_Datum.getSelectedItem())) && tokens[1].equals((String)(Output_Datum.getSelectedItem())) && tokens[2].equals(LatitudeInput.getText()) && tokens[3].equals(LongitudeInput.getText()) && tokens[4].equals(HeightInput.getText()))
                        {
                            System.out.println("found");
                            check=1;
                            JOptionPane.showMessageDialog(null,"Already in cache!","Cache",JOptionPane.INFORMATION_MESSAGE);
                            LatitudeOutput.setText(tokens[5]);
                            LongitudeOutput.setText(tokens[6]);
                            break;
                        }
                }   
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                br1.close();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                
                
            String[] latitude=(LatitudeInput.getText()).split(" ");
            String[] longitude=LongitudeInput.getText().split(" ");
            if(Toggle==0){
                height_input=Double.parseDouble(HeightInput.getText());
            }else{
                height_input=0;
            }
            if(DD.isSelected())
            {
                if(latitude.length!=1 || longitude.length!=1){
                    JOptionPane.showMessageDialog(null,"Enter right input format!","Error",JOptionPane.INFORMATION_MESSAGE);
                    flag=1;
                }else{
                try{
                    lat_input=Double.parseDouble(LatitudeInput.getText());
                    long_input=Double.parseDouble(LongitudeInput.getText());
                }
                catch(java.lang.NumberFormatException e){
                    JOptionPane.showMessageDialog(null,"Enter a valid input!","Error",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            }else if(DMM.isSelected()){
              if((latitude.length!=2 || longitude.length!=2)){
                    JOptionPane.showMessageDialog(null,"Enter right input format!","Error",JOptionPane.INFORMATION_MESSAGE);
                    flag=1;
                }else{        
                lat_input=toDecimal(LatitudeInput.getText());
                long_input=toDecimal(LongitudeInput.getText());
            }}else if(DMSS.isSelected()){
              if(latitude.length!=3 || longitude.length!=3){
                    JOptionPane.showMessageDialog(null,"Enter right input format!","Error",JOptionPane.INFORMATION_MESSAGE);
                    flag=1;
                }else{        
                lat_input=toDecimalS(LatitudeInput.getText());
                long_input=toDecimalS(LongitudeInput.getText());
            }}
            
            String Input=((String) (Input_Datum.getSelectedItem()));  //From ComboBox1
            Input=Input+" ";
            String Output=((String) (Output_Datum.getSelectedItem()));  //From ComboBox2
            Output=Output+" ";
        
            try {
                //System.out.print(Input);
                //calledFromGUI
                if(flag==0)
                datumOut=calledFromGUI(lat_input,long_input,height_input,Input,Output);
                } 
            catch (IOException ex) 
            {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                if(flag==0){
                    if(Toggle==0){
                        HeightOutput.setText(Double.toString(datumOut[2]));
                    }else{
                        HeightOutput.setText("");
                    }
                if(DD.isSelected()){
                    LatitudeOutput.setText(Double.toString(datumOut[0]));
                    LongitudeOutput.setText(Double.toString(datumOut[1]));
            }else if(DMM.isSelected()){
                LatitudeOutput.setText(Integer.toString((int) datumOut[0])+" "+(datumOut[0]-(int) datumOut[0])*60);
                LongitudeOutput.setText(Integer.toString((int) datumOut[1])+" "+(datumOut[1]-(int) datumOut[1])*60);
            }else if(DMSS.isSelected()){
                double second1=(((datumOut[0]-(int) datumOut[0])*60)-(int)((datumOut[0]-(int) datumOut[0])*60))*60;
                double second2=(((datumOut[1]-(int) datumOut[1])*60)-(int)((datumOut[1]-(int) datumOut[1])*60))*60;
                LatitudeOutput.setText(Integer.toString((int) datumOut[0])+" "+(int)((datumOut[0]-(int) datumOut[0])*60)+" "+second1);
                LongitudeOutput.setText(Integer.toString((int) datumOut[1])+" "+(int)((datumOut[1]-(int) datumOut[1])*60)+" "+second2);
            }
          }else{//When the input format is not fine reset
            LatitudeOutput.setText(null);
            LongitudeOutput.setText(null);
            HeightOutput.setText(null);
            LatitudeInput.setText(null);
            LongitudeInput.setText(null);
            HeightInput.setText(null);
                    }
                if(check==0){
                        String update ;
      update = (String)(Input_Datum.getSelectedItem());
      update+=',';
      update+=(String)(Output_Datum.getSelectedItem());
      update+=',';
      update+=LatitudeInput.getText();
      update+=',';
      update+=LongitudeInput.getText();
      update+=',';
      update+=HeightInput.getText();
      update+=',';
      update+=datumOut[0];
      update+=',';
      update+=datumOut[1];
      update+=',';
      update+=datumOut[2];
      System.out.println("Update : "+update);
      try{
    	
                File file =new File("src\\GUI\\recent.csv");
                
                if(!file.exists()){
                file.createNewFile();
    	}

    	//Here true is to append the content to file
            FileWriter fw = new FileWriter(file,true);
            try ( //BufferedWriter writer give better performance
                    BufferedWriter bw = new BufferedWriter(fw)) {
                    bw.write(update);
                    bw.write("\n");
                //Closing BufferedWriter Stream
            }
        System.out.println("Data successfully appended at the end of file");
                }catch(IOException ioe){
         System.out.println("Exception occurred:");
       }
        }
        }
 /*         
            try{
    	
                File file =new File("src\\GUI\\recent.csv");
                
                if(!file.exists()){
                file.createNewFile();
    	}

    	//Here true is to append the content to file
            FileWriter fw = new FileWriter(file,true);
            try ( //BufferedWriter writer give better performance
                    BufferedWriter bw = new BufferedWriter(fw)) {
                    bw.write(update);
                    bw.write("\n");
                //Closing BufferedWriter Stream
            }
        System.out.println("Data successfully appended at the end of file");

      }catch(IOException ioe){
         System.out.println("Exception occurred:");
       }
      
        }
      
    }                                             

    }//GEN-LAST:event_ConvertButtonActionPerformed
  */  //Void Convert Action Performed Closes Here
    /*Impotrtant Code Ends Here*/
    }
    }
    private void LatitudeInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LatitudeInputMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_LatitudeInputMouseExited

    private void HeightInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HeightInputActionPerformed

    private void HeightOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HeightOutputActionPerformed

    private void LongitudeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LongitudeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LongitudeInputActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        LatitudeOutput.setText(null);
        LongitudeOutput.setText(null);
        HeightOutput.setText(null);
        LatitudeInput.setText(null);
        LongitudeInput.setText(null);
        HeightInput.setText(null);
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void DMSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DMSSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DMSSActionPerformed

    private void DMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DMMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DMMActionPerformed

    private void DDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_DDActionPerformed

    private void fromMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromMapActionPerformed
        // TODO add your handling code here:
        map ma=new map();
        ma.fromMap();

        LatitudeInput.setText(Double.toString(ma.l1));
        LongitudeInput.setText(Double.toString(ma.l2));
        
        //System.out.println(a1);
        //double c=ma.returner1();
        //System.out.println(c);
    }//GEN-LAST:event_fromMapActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        map ma=new map();
        LatitudeInput.setText(Double.toString(ma.l1));
        LongitudeInput.setText(Double.toString(ma.l2));
        HeightInput.setText(Double.toString(0));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void HeightOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightOptionActionPerformed
        // TODO add your handling code here:
        if(Toggle==0){
            HeightInput.setEditable(false);
            HeightInput.setText("No Height");
            Toggle=1;
        }else{
            HeightInput.setEditable(true);
            HeightInput.setText("");
            Toggle=0;
        }
    }//GEN-LAST:event_HeightOptionActionPerformed


    /**
     * @param args the command line arguments
     */
    
    //To Run Threads (****Main Function****)
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    //END OF MAIN

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConvertButton;
    private javax.swing.JRadioButton DD;
    private javax.swing.JRadioButton DMM;
    private javax.swing.JRadioButton DMSS;
    private javax.swing.ButtonGroup FormatSelector;
    private javax.swing.JTextField HeightInput;
    private javax.swing.JToggleButton HeightOption;
    private javax.swing.JTextField HeightOutput;
    private javax.swing.JComboBox<String> Input_Datum;
    private javax.swing.JTextField LatitudeInput;
    private javax.swing.JTextField LatitudeOutput;
    private javax.swing.JTextField LongitudeInput;
    private javax.swing.JTextField LongitudeOutput;
    private javax.swing.JComboBox<String> Output_Datum;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton fromMap;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
